using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web.Mvc;
using TobeMvcPractise.Models;

namespace TobeMvcPractise.Services
{
    public class EmployeeEntityServices : IDisposable
    {
        private MyDbContext _dbContext;

        public EmployeeEntityServices(MyDbContext dbContext)
        {
            _dbContext = dbContext;
        }

        public IEnumerable<Employee> GetAllEmployees()
        {
            var employees = from emp in _dbContext.Employees
                            orderby emp.Id
                            select emp;

            return employees;
        }

        public Task<IEnumerable<Employee>> GetAllEmployeesAsync()
        {
            return Task.Factory.StartNew(() =>
            {
                return GetAllEmployees();
            });
        }

        public Employee GetEmployee(int id)
        {
            Employee employee = _dbContext.Employees.Find(id);

            return employee;
        }

        public bool AddEmployee(Employee emp)
        {
            try
            {
                _dbContext.Employees.Add(emp);
                _dbContext.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        //not necessary, Id is the primary key and is auto-generated by entity framework
        private int NewEmployeeId()
        {
            int id = _dbContext.Employees.Max(e => e.Id) + 1;

            return id;
        }

        public bool UpdateEmployee(int id, FormCollection collection)
        {
            try
            {
                Employee emp = GetEmployee(id);
                emp.Name = collection["Name"];
                emp.Age = int.Parse(collection["Age"]);
                emp.JoiningDate = DateTime.Parse(collection["JoiningDate"]);
                _dbContext.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public bool UpdateEmployee(Employee employee)
        {
            try
            {
                Employee emp = GetEmployee(employee.Id);
                emp.Name = employee.Name;
                emp.Age = employee.Age;
                emp.JoiningDate = employee.JoiningDate;
                _dbContext.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public bool RemoveEmployee(int id)
        {
            try
            {
                Employee employee = GetEmployee(id);
                _dbContext.Employees.Remove(employee);
                _dbContext.SaveChanges();
                return true;
            }
            catch
            {
                return false;
            }
        }

        public void Dispose()
        {
            _dbContext.Dispose();
        }
    }
}